SELECT artists.name, albums.name, songs.track, songs.title FROM songs
INNER JOIN albums ON songs.album = albums._id
INNER JOIN artists ON albums.artist = artists._id
WHERE artists.name LIKE "jefferson%"
ORDER BY artists.name, albums.name, songs.track;

CREATE VIEW artist_list AS
SELECT artists.name AS artist, albums.name AS album, songs.track, songs.title FROM songs
INNER JOIN albums ON songs.album = albums._id
INNER JOIN artists ON albums.artist = artists._id
ORDER BY artists.name, albums.name, songs.track;

CREATE VIEW album_list AS
SELECT name FROM albums ORDER BY name COLLATE NOCASE;

DROP VIEW album_list;

1. Select the titles of all the songs on the album "Forbidden".
SELECT albums.name, songs.title FROM songs
INNER JOIN albums ON songs.album = albums._id
WHERE albums.name LIKE "%Forbidden%";

2. Repeat the previous query but this time display the songs in track order, you may want to include the track number in the output to verify that it worked ok.
SELECT albums.name, songs.track, songs.title FROM songs
INNER JOIN albums ON songs.album = albums._id
WHERE albums.name LIKE "%Forbidden%"
ORDER BY songs.track;

3. Display all songs for the band "Deep Purple".
SELECT artists.name, songs.title FROM songs
INNER JOIN albums ON songs.album = albums._id
INNER JOIN artists ON albums.artist = artists._id
WHERE artists.name = "Deep Purple";

4. Rename the band "Mehitabel" to "One Kitten". Note that this is an exception to the advice to always fully qualify your column names. SET artists.name wont work, you must need to specify name.
UPDATE artists SET name = "One Kitten"
WHERE artists.name = "Mehitabel";

5. Check that the record was correctly renamed.
SELECT * FROM artists WHERE artists.name = "One Kitten";

6. Select the titles of all the songs by Aerosmith in alphabetical order. Include only the title in the output.
SELECT songs.title FROM songs
INNER JOIN albums ON songs.album = albums._id
INNER JOIN artists ON albums.artist = artists._id
WHERE artists.name = "Aerosmith" ORDER BY songs.title;

SELECT title FROM artist_list WHERE artist = "Aerosmith"
ORDER BY title;

7. Replace the column that you used in the previous answer with count(title) to get just a count of the number of songs.
SELECT COUNT(songs.title) FROM songs
INNER JOIN albums ON songs.album = albums._id
INNER JOIN artists ON albums.artist = artists._id
WHERE artists.name = "Aerosmith" ORDER BY songs.title;

SELECT COUNT (title) FROM artist_list WHERE artist = "Aerosmith"
ORDER BY title;

8. Search the internet to find out how to get a list of the songs from step 6 without any duplicates.
SELECT DISTINCT songs.title FROM songs
INNER JOIN albums ON songs.album = albums._id
INNER JOIN artists ON albums.artist = artists._id
WHERE artists.name = "Aerosmith" ORDER BY songs.title;

SELECT DISTINCT title FROM artist_list WHERE artist = "Aerosmith"
ORDER BY title;

9. Search the internet again to find out how to get a count of the songs without duplicates. HINT: It uses the same keyword as step 8 but the syntax may no be obvious.
SELECT COUNT(DISTINCT songs.title) FROM songs
INNER JOIN albums ON songs.album = albums._id
INNER JOIN artists ON albums.artist = artists._id
WHERE artists.name = "Aerosmith" ORDER BY songs.title;

SELECT COUNT(DISTINCT title) FROM artist_list
WHERE artist = "Aerosmith" ORDER BY title;

10. Repeat the previous query to find the number of artists (which, obviously, should be one) and the number of albums.
SELECT COUNT(DISTINCT artists.name), COUNT(albums.name) FROM albums
INNER JOIN artists ON albums.artist = artists._id
WHERE artists.name = "Aerosmith";

SELECT COUNT(DISTINCT artist), COUNT(DISTINCT album) FROM artist_list
WHERE artist = "Aerosmith";
